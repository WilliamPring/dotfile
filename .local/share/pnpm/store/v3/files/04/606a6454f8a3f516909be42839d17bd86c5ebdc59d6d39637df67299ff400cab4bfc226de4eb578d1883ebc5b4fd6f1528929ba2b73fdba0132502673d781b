import { z } from "zod";
declare const schemaAccountListParams: z.ZodOptional<z.ZodObject<{
    currencyIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    currencyIds?: string[] | undefined;
}, {
    currencyIds?: string[] | undefined;
}>>;
declare const schemaAccountListResults: z.ZodObject<{
    rawAccounts: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        address: z.ZodString;
        currency: z.ZodString;
        balance: z.ZodString;
        spendableBalance: z.ZodString;
        blockHeight: z.ZodNumber;
        lastSyncDate: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        name: string;
        address: string;
        currency: string;
        balance: string;
        spendableBalance: string;
        blockHeight: number;
        lastSyncDate: string;
    }, {
        id: string;
        name: string;
        address: string;
        currency: string;
        balance: string;
        spendableBalance: string;
        blockHeight: number;
        lastSyncDate: string;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    rawAccounts: {
        id: string;
        name: string;
        address: string;
        currency: string;
        balance: string;
        spendableBalance: string;
        blockHeight: number;
        lastSyncDate: string;
    }[];
}, {
    rawAccounts: {
        id: string;
        name: string;
        address: string;
        currency: string;
        balance: string;
        spendableBalance: string;
        blockHeight: number;
        lastSyncDate: string;
    }[];
}>;
export declare const schemaAccountList: {
    params: z.ZodOptional<z.ZodObject<{
        currencyIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        currencyIds?: string[] | undefined;
    }, {
        currencyIds?: string[] | undefined;
    }>>;
    result: z.ZodObject<{
        rawAccounts: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            address: z.ZodString;
            currency: z.ZodString;
            balance: z.ZodString;
            spendableBalance: z.ZodString;
            blockHeight: z.ZodNumber;
            lastSyncDate: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            address: string;
            currency: string;
            balance: string;
            spendableBalance: string;
            blockHeight: number;
            lastSyncDate: string;
        }, {
            id: string;
            name: string;
            address: string;
            currency: string;
            balance: string;
            spendableBalance: string;
            blockHeight: number;
            lastSyncDate: string;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        rawAccounts: {
            id: string;
            name: string;
            address: string;
            currency: string;
            balance: string;
            spendableBalance: string;
            blockHeight: number;
            lastSyncDate: string;
        }[];
    }, {
        rawAccounts: {
            id: string;
            name: string;
            address: string;
            currency: string;
            balance: string;
            spendableBalance: string;
            blockHeight: number;
            lastSyncDate: string;
        }[];
    }>;
};
export declare type AccountList = {
    params: z.infer<typeof schemaAccountListParams>;
    result: z.infer<typeof schemaAccountListResults>;
};
export declare type AccountListHandler = (params: AccountList["params"]) => AccountList["result"];
export {};
//# sourceMappingURL=AccountList.d.ts.map