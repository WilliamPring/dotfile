/**
 * Flowtype definitions for txOther
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.1
 * @flow
 */

import type {
  Int64_str,
  ParsedAssetGroup,
  ParsedInput,
  ParsedRequiredSigner,
  ParsedToken,
  ParsedWithdrawal,
  Uint64_str,
  ValidBIP32Path,
  Version,
} from "../../types/internal";
import type { SerializeTokenAmountFn } from "../signTx";
declare export function serializeTxInput(input: ParsedInput): Buffer;
declare export function serializeTxWithdrawal(
  withdrawal: ParsedWithdrawal,
  version: Version
): Buffer;
declare export function serializeTxFee(fee: Uint64_str): Buffer;
declare export function serializeTxTtl(ttl: Uint64_str): Buffer;
declare export function serializeTxValidityStart(
  validityIntervalStart: Uint64_str
): Buffer;
declare export function serializeTxWitnessRequest(path: ValidBIP32Path): Buffer;
declare export function serializeAssetGroup<T>(
  assetGroup: ParsedAssetGroup<T>
): Buffer;
declare export function serializeToken<T>(
  token: ParsedToken<T>,
  serializeTokenAmountFn: SerializeTokenAmountFn<T>
): Buffer;
declare export function serializeMintBasicParams(
  mint: Array<ParsedAssetGroup<Int64_str>>
): Buffer;
declare export function serializeRequiredSigner(
  requiredSigner: ParsedRequiredSigner
): Buffer;
declare export function serializeTotalCollateral(
  totalCollateral: Uint64_str
): Buffer;
