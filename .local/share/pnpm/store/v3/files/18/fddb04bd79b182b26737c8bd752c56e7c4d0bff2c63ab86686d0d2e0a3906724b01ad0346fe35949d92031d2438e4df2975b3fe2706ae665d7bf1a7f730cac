"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.croClient = void 0;
var tendermint_rpc_1 = require("@cosmjs/tendermint-rpc");
var stargate_1 = require("@cosmjs/stargate");
var ow_1 = __importDefault(require("ow"));
var ow_types_1 = require("./ow.types");
exports.croClient = function (config) {
    return (function () {
        function CroClient(tmClient, txClient) {
            this.txClient = txClient;
            this.tmClient = tmClient;
            this.queryClient = stargate_1.QueryClient.withExtensions(tmClient, stargate_1.setupAuthExtension, stargate_1.setupBankExtension, stargate_1.setupStakingExtension, stargate_1.setupDistributionExtension);
            this.baseDenom = config.network.coin.baseDenom;
        }
        CroClient.connect = function (endpoint) {
            if (endpoint === void 0) { endpoint = config.network.rpcUrl; }
            return __awaiter(this, void 0, void 0, function () {
                var tmClient, txClient;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            ow_1.default(endpoint, 'endpoint', ow_types_1.owUrl);
                            return [4, tendermint_rpc_1.Tendermint34Client.connect(endpoint)];
                        case 1:
                            tmClient = _a.sent();
                            return [4, stargate_1.StargateClient.connect(endpoint)];
                        case 2:
                            txClient = _a.sent();
                            return [2, new CroClient(tmClient, txClient)];
                    }
                });
            });
        };
        CroClient.prototype.disconnect = function () {
            if (this.tmClient)
                this.tmClient.disconnect();
            if (this.txClient)
                this.txClient.disconnect();
        };
        CroClient.prototype.query = function () {
            return this.queryClient;
        };
        CroClient.prototype.getChainId = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, this.txClient.getChainId()];
                });
            });
        };
        CroClient.prototype.getHeight = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, this.txClient.getHeight()];
                });
            });
        };
        CroClient.prototype.getAccount = function (searchAddress) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, this.txClient.getAccount(searchAddress)];
                });
            });
        };
        CroClient.prototype.getAccountVerified = function (searchAddress) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, this.txClient.getAccountVerified(searchAddress)];
                });
            });
        };
        CroClient.prototype.getSequence = function (address) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, this.txClient.getSequence(address)];
                });
            });
        };
        CroClient.prototype.getBlock = function (height) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, this.txClient.getBlock(height)];
                });
            });
        };
        CroClient.prototype.getCroBalance = function (address) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, this.txClient.getBalance(address, this.baseDenom)];
                });
            });
        };
        CroClient.prototype.getTx = function (id) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, this.txClient.getTx(id)];
                });
            });
        };
        CroClient.prototype.searchTx = function (query, filter) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, this.txClient.searchTx(query, filter)];
                });
            });
        };
        CroClient.prototype.broadcastTx = function (tx) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, this.txClient.broadcastTx(tx)];
                });
            });
        };
        return CroClient;
    }());
};
//# sourceMappingURL=client.js.map