import { z } from "zod";
declare const schemaBitcoinGetXPubParams: z.ZodObject<{
    accountId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    accountId: string;
}, {
    accountId: string;
}>;
declare const schemaBitcoinGetXPubResults: z.ZodObject<{
    xPub: z.ZodString;
}, "strip", z.ZodTypeAny, {
    xPub: string;
}, {
    xPub: string;
}>;
export declare const schemaBitcoinGetXPub: {
    params: z.ZodObject<{
        accountId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        accountId: string;
    }, {
        accountId: string;
    }>;
    result: z.ZodObject<{
        xPub: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        xPub: string;
    }, {
        xPub: string;
    }>;
};
export declare type BitcoinGetXPub = {
    params: z.infer<typeof schemaBitcoinGetXPubParams>;
    result: z.infer<typeof schemaBitcoinGetXPubResults>;
};
export declare type BitcoinGetXPubHandler = (params: BitcoinGetXPub["params"]) => BitcoinGetXPub["result"];
export {};
//# sourceMappingURL=BitcoinGetXPub.d.ts.map